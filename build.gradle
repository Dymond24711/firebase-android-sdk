// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

buildscript {
    // TODO: remove once all sdks have migrated to version catalog
    ext.kotlinVersion = libs.versions.kotlin.get()
    ext.coroutinesVersion = libs.versions.coroutines.get()

    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://storage.googleapis.com/android-ci/mvn/'
            metadataSources {
                artifact()
            }
        }

    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.2'
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:1.3.0'
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.20.0"
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-appdistribution-gradle:3.0.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.5'
    }
}

apply from: 'sdkProperties.gradle'
apply from: "gradle/errorProne.gradle"

ext {
    // TODO: remove once all sdks have migrated to version catalog
    googleTruthVersion = libs.versions.truth.get()
    grpcVersion = libs.versions.grpc.get()
    robolectricVersion = libs.versions.robolectric.get()
    androidxTestCoreVersion = libs.versions.androidx.test.core.get()
    androidxTestJUnitVersion = libs.versions.androidx.test.junit.get()
    protocVersion = libs.versions.protoc.get()
    javaliteVersion = libs.versions.javalite.get()
    protobufJavaUtilVersion = libs.versions.protobufjavautil.get()
}

apply plugin: com.google.firebase.gradle.plugins.ci.ContinuousIntegrationPlugin
apply plugin: com.google.firebase.gradle.plugins.ci.SmokeTestsPlugin

apply plugin: com.google.firebase.gradle.plugins.PublishingPlugin

firebaseContinuousIntegration {
    ignorePaths = [
            /.*\.gitignore$/,
            /.*\/.*.md$/,
            /.*\.github.*/,
    ]
}

if (JavaVersion.current() < JavaVersion.VERSION_11) {
    throw new GradleException("This build must be run with java 11 or greater. You're using ${JavaVersion.current()}.")
}

configure(subprojects) {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://storage.googleapis.com/android-ci/mvn/'
            metadataSources {
                artifact()
            }
        }
    }

    apply plugin: "com.diffplug.spotless"

    spotless {
        java {
            target("**/*.java")
            googleJavaFormat("1.17.0").groupArtifact("com.google.googlejavaformat:google-java-format")
            targetExclude(".gradle/**")
        }
        kotlin {
            // Setting a target here is a workaround for a spotless issue in Android projects
            // See https://github.com/diffplug/spotless/issues/858#issuecomment-830681795
            target("**/*.kt")
            ktfmt('0.44').googleStyle()
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
